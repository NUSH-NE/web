class timer{constructor(t,e){this.intID=null,this.cb=e,this.progress=t.MDCLinearProgress}initTimer(t){this.totalTime=t,this.current=t,null!==this.intID&&(clearInterval(this.intID),this.intID=null)}startTimer(){return!(this.current<0)&&(this.progress.progress=1,this.cb((this.totalTime/1e3).toFixed(0)),this.st=new Date,setTimeout(()=>{this.intID=setInterval(()=>{this.progress.progress=this.current/this.totalTime,this.cb((this.current/1e3).toFixed(0)),this.current=this.totalTime-(new Date-this.st),this.current<0&&(clearInterval(this.intID),this.intID=null,this.progress.progress=0,this.cb(0))},100)},250),!0)}pauseTimer(){clearInterval(this.intID),this.intID=null}}class pointsCalc{constructor(t){this.maxTime=t}mainStart(){this.stats={quizStart:new Date,quizEnd:null,quizTime:null},this.history={}}start(t){this.history[t]={startTime:new Date,endTime:null,tTime:null,res:0,pts:0}}end(t,e){this.history[t].endTime=new Date,this.history[t].tTime=this.history[t].endTime-this.history[t].startTime,this.history[t].res=e,this.history[t].pts=2===e?0:e?10*(.5*Math.pow(10-this.history[t].tTime*(1e4/this.maxTime)/1e3,2)+2):20}mainEnd(){this.stats.quizEnd=new Date,this.stats.quizTime=this.stats.quizEnd-this.stats.quizStart}getHistory(){return this.history}getTotPts(){console.log(this.history);let t=0;for(const e in this.history)this.history.hasOwnProperty(e)&&(t+=Math.round(this.history[e].pts));return t}}(()=>{const t=$("result-dialog").MDCDialog,e=$("end-dialog").MDCDialog,i=$("dialog-pts-odometer"),o=t=>Math.floor(Math.random()*t),s=new timer($("timer-progress"),t=>{$("timer-number").textContent=t,0===t&&p(10)}),n=new pointsCalc(1e4),r=[{qn:"This is a test question",op1:"First option",op2:"This is definitely the correct option",op3:"You can add your own question text",op4:"Like this",cOp:2},{qn:"Hello There!",op1:"Goodbye!",op2:"Hey",op3:"Hello!",op4:"Happy",cOp:3},{qn:"This is another funny question",op1:"Click me!",op2:"More options",op3:"Even more options",op4:"You can include as many questions as you want",cOp:1}],a=[],h=()=>{s.initTimer(1e4),s.startTimer(),n.start(a[0]),q("button.quiz-opt__1 > span.mdc-typography--body1").textContent=r[a[0]].op1,q("button.quiz-opt__2 > span.mdc-typography--body1").textContent=r[a[0]].op2,q("button.quiz-opt__3 > span.mdc-typography--body1").textContent=r[a[0]].op3,q("button.quiz-opt__4 > span.mdc-typography--body1").textContent=r[a[0]].op4,$("question-text").textContent=r[a[0]].qn,$("num-qns").textContent=a.length},l=()=>{if(a.splice(0,1),a.length<=0)return $("end-dialog-content").textContent=`You have reached the end of the quiz, and scored ${n.getTotPts()} points! Congrats!`,$("endAnim").play(),void e.open();h()},p=e=>{if(s.pauseTimer(),0===a.length)return;const o=e>4?2:e===r[a[0]].cOp?1:0;n.end(a[0],o),showMsg(2===o?"Out of time":o?"Correct":"Wrong"),((e,o=!1)=>{$("resultAnim").load(e?"assets/raw/check.json":"assets/raw/cross.json"),q("#res-dialog-title > h2").textContent=o?"You ran out of time!":e?"Correct!":"Wrong!",$("res-dialog-content").textContent=o?"Try to be faster next time! You can do it!":e?"Congratulations! Keep up the good work!":"Whoops! Try harder next time. You can do it!",i.textContent="0",i.textContent=n.getHistory()[a[0]].pts.toFixed(0),t.open(),$("totPts").textContent=n.getTotPts()})(1===o,2===o),$("main-anim").pause()};t.listen("MDCDialog:closed",()=>{l(),a.length>0&&$("main-anim").play()}),q("button.quiz-opt__1").onclick=(()=>p(1)),q("button.quiz-opt__2").onclick=(()=>p(2)),q("button.quiz-opt__3").onclick=(()=>p(3)),q("button.quiz-opt__4").onclick=(()=>p(4)),e.scrimClickAction="",e.escapeKeyAction="";(()=>{for(let t=0;t<r.length;t++){let t=o(r.length);do{t=o(r.length)}while(a.includes(t));a.push(t)}n.mainStart(),h()})()})();